import json
import matplotlib.pyplot as plt

# Load JSON data
with open('aural_features.json', 'r') as file:
    data = json.load(file)

# Extract data with error handling
start_timestamps = [entry.get('start_timestamp', None) for entry in data]
end_timestamps = [entry.get('end_timestamp', None) for entry in data]
words = [entry.get('word', 'Unknown') for entry in data]
pitch = [entry.get('pitch', 0) for entry in data]
energy = [entry.get('energy', 0) for entry in data]
stress = [entry.get('stress', 0) for entry in data]

# Calculate the mid-point of each word's duration for plotting
timestamps = [(start + end) / 2 if start is not None and end is not None else None for start, end in zip(start_timestamps, end_timestamps)]

# Filter out None values
valid_indices = [i for i, t in enumerate(timestamps) if t is not None]
timestamps = [timestamps[i] for i in valid_indices]
start_timestamps = [start_timestamps[i] for i in valid_indices]
end_timestamps = [end_timestamps[i] for i in valid_indices]
words = [words[i] for i in valid_indices]
pitch = [pitch[i] for i in valid_indices]
energy = [energy[i] for i in valid_indices]
stress = [stress[i] for i in valid_indices]

# Create labels combining words and timestamps
labels = [f"{word}\n({round(start, 2)}s - {round(end, 2)}s)" for word, start, end in zip(words, start_timestamps, end_timestamps)]

# Create the plot
plt.figure(figsize=(14, 10))

plt.subplot(3, 1, 1)
plt.plot(timestamps, pitch, marker='o', color='b', label='Pitch')
plt.xticks(timestamps, labels, rotation=45, ha='right')
plt.ylabel('Pitch')
plt.grid(True)

plt.subplot(3, 1, 2)
plt.plot(timestamps, energy, marker='x', color='g', label='Energy')
plt.xticks(timestamps, labels, rotation=45, ha='right')
plt.ylabel('Energy')
plt.grid(True)

plt.subplot(3, 1, 3)
plt.scatter(timestamps, stress, color='r', label='Stress')
plt.xticks(timestamps, labels, rotation=45, ha='right')
plt.ylabel('Stress')
plt.grid(True)

plt.suptitle("Audio Features Mapped to Words Over Time (With Start and End Timestamps)")
plt.tight_layout()
plt.show()
